from typing import List
from statistics import mean

# Определение классов данных
class СинтаксическаяКонструкция:
    def __init__(self, id, название, описание, язык_id):
        self.id = id
        self.название = название
        self.описание = описание
        self.язык_id = язык_id

class ЯзыкПрограммирования:
    def __init__(self, id, название):
        self.id = id
        self.название = название

class КонструкцииЯзыка:
    def __init__(self, конструкция_id, язык_id):
        self.конструкция_id = конструкция_id
        self.язык_id = язык_id

# Создание тестовых данных
языки = [
    ЯзыкПрограммирования(1, 'Python'),
    ЯзыкПрограммирования(2, 'JavaScript'),
    ЯзыкПрограммирования(3, 'C++')
]

конструкции = [
    СинтаксическаяКонструкция(1, 'Цикл', 'Повторение операций', 1),
    СинтаксическаяКонструкция(2, 'Условие', 'Выбор выполнения', 1),
    СинтаксическаяКонструкция(3, 'Функция', 'Определение подпрограммы', 2),
    СинтаксическаяКонструкция(4, 'Массив', 'Коллекция данных', 3)
]

конструкции_языков = [
    КонструкцииЯзыка(1, 1),
    КонструкцииЯзыка(2, 1),
    КонструкцииЯзыка(3, 2),
    КонструкцииЯзыка(4, 3),
]

# Запрос 1
result_1 = [
    (конструкция.название, язык.название)
    for конструкция in конструкции
    for язык in языки
    if конструкция.язык_id == язык.id and конструкция.название.endswith('ие')
]
print("Список конструкций, заканчивающихся на 'ие':", result_1)

# Запрос 2
средняя_длина_описания = [
    (язык.название, mean([len(конструкция.описание) for конструкция in конструкции if конструкция.язык_id == язык.id]))
    for язык in языки
]
средняя_длина_описания.sort(key=lambda x: x[1])
print("Средняя длина описания конструкций по языкам:", средняя_длина_описания)

# Запрос 3
result_3 = [
    (язык.название, [конструкция.название for конструкция in конструкции if конструкция.язык_id == язык.id])
    for язык in языки
    if язык.название.startswith('P')
]
print("Список языков, начинающихся на 'P', и их конструкции:", result_3)
